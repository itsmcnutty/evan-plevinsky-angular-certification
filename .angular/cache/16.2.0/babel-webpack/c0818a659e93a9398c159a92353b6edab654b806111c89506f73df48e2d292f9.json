{"ast":null,"code":"var _class;\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { QuizServiceConstants } from '../constants/quiz-service.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTriviaCategories() {\n    return this.http.get(QuizServiceConstants.QuizCategoriesUrl).pipe(tap(_ => console.log('Fetched trivia categories')));\n  }\n  getTriviaQuestions(category, difficulty) {\n    const questionUrl = QuizServiceConstants.QuizQuestionUrl.replace(QuizServiceConstants.CategoryPlaceholder, category).replace(QuizServiceConstants.DifficultyPlaceholder, difficulty);\n    return this.http.get(questionUrl).pipe(tap(_ => console.log(`Fetched trivia questions for category ${category}, difficulty ${difficulty}`)));\n  }\n}\n_class = QuizService;\n_class.ɵfac = function QuizService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpClient","tap","QuizServiceConstants","QuizService","constructor","http","getTriviaCategories","get","QuizCategoriesUrl","pipe","_","console","log","getTriviaQuestions","category","difficulty","questionUrl","QuizQuestionUrl","replace","CategoryPlaceholder","DifficultyPlaceholder","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["C:\\git\\stackblitz-angular-certification\\src\\app\\services\\quiz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CategoriesResponseModel } from '../models/categories-response.model';\r\nimport { QuizServiceConstants } from '../constants/quiz-service.constants';\r\nimport { QuestionsResponseModel } from '../models/questions-response.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuizService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTriviaCategories(): Observable<CategoriesResponseModel> {\r\n    return this.http\r\n      .get<CategoriesResponseModel>(QuizServiceConstants.QuizCategoriesUrl)\r\n      .pipe(tap((_) => console.log('Fetched trivia categories')));\r\n  }\r\n\r\n  getTriviaQuestions(\r\n    category: string,\r\n    difficulty: string\r\n  ): Observable<QuestionsResponseModel> {\r\n    const questionUrl = QuizServiceConstants.QuizQuestionUrl.replace(\r\n      QuizServiceConstants.CategoryPlaceholder,\r\n      category\r\n    ).replace(QuizServiceConstants.DifficultyPlaceholder, difficulty);\r\n    return this.http\r\n      .get<QuestionsResponseModel>(questionUrl)\r\n      .pipe(\r\n        tap((_) =>\r\n          console.log(\r\n            `Fetched trivia questions for category ${category}, difficulty ${difficulty}`\r\n          )\r\n        )\r\n      );\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,oBAAoB,QAAQ,qCAAqC;;;AAM1E,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CAA0BL,oBAAoB,CAACM,iBAAiB,CAAC,CACpEC,IAAI,CAACR,GAAG,CAAES,CAAC,IAAKC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;EAC/D;EAEAC,kBAAkBA,CAChBC,QAAgB,EAChBC,UAAkB;IAElB,MAAMC,WAAW,GAAGd,oBAAoB,CAACe,eAAe,CAACC,OAAO,CAC9DhB,oBAAoB,CAACiB,mBAAmB,EACxCL,QAAQ,CACT,CAACI,OAAO,CAAChB,oBAAoB,CAACkB,qBAAqB,EAAEL,UAAU,CAAC;IACjE,OAAO,IAAI,CAACV,IAAI,CACbE,GAAG,CAAyBS,WAAW,CAAC,CACxCP,IAAI,CACHR,GAAG,CAAES,CAAC,IACJC,OAAO,CAACC,GAAG,CACT,yCAAyCE,QAAQ,gBAAgBC,UAAU,EAAE,CAC9E,CACF,CACF;EACL;;SA1BWZ,WAAW;;mBAAXA,MAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAvB,UAAA;AAAA;;SAAXG,MAAW;EAAAqB,OAAA,EAAXrB,MAAW,CAAAsB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}